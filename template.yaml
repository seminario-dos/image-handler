AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    image-handler

    Sample SAM Template for image-handler


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 20


Resources:

    ImageHandlerFunction:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: ImageHandlerSimple
            CodeUri: target/image-handler-0.0.2-simple-measuring-SNAPSHOT.jar
            Handler: tec.mf.handler.ImageHandlerSimple::handleRequest
            Runtime: java8
            MemorySize: 512
            Description: Lambda for serving and manipulate images from several sources
            Environment:
                Variables:
                    PROFILE: PROD
                    IMAGES_BUCKET: images-repo.dev
            Policies:
                - AWSLambdaExecute
                - Version: '2012-10-17'
                  Statement:
                      - Effect: Allow
                        Action:
                            - s3:GetObject
                        Resource: 'arn:aws:s3:::images-repo.dev/*'
            Events:
                GetImage:
                    Type: Api
                    Properties:
                        RestApiId: !Ref ImageHandlerGatewayApi
                        Path: '/*'
                        Method: '*'


    ImageHandlerGatewayApi:
        Type: AWS::Serverless::Api
        Properties:
            StageName: dev
#            DefinitionUri: ./swagger.yaml
            DefinitionBody:
                swagger: "2.0"
                info:
                    version: "2018-01-28"
                    title:
                        Ref: AWS::StackName
                basePath: "/images"
                schemes:
                    - "https"
                paths:
                    /images/{image+}:
                        x-amazon-apigateway-any-method:
                            produces:
                                - "application/json"
                            parameters:
                                - name: "images"
                                  in: "path"
                                  required: true
                                  type: "string"
                            responses: {}
                            x-amazon-apigateway-integration:
                                responses:
                                    default:
                                        statusCode: "200"
                                httpMethod: "POST"
                                type: "aws_proxy"
                                uri:
                                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ImageHandlerFunction.Arn}/invocations


                x-amazon-apigateway-binary-media-types:
                    - '*/*'
#                    - "application/octet-stream"
#                    - "image/jpeg"
                definitions:
                    Empty:
                        type: "object"
                        title: "Empty Schema"
#            Variables:
#                ApiName: !Ref AWS::StackName
#                LambdaFunctionName: !Ref ImageHandlerFunction


#    ImagesBucket:
#        Type: AWS::S3::Bucket
#        Properties:
#            BucketName: images-repo.dev


Outputs:

#    HelloWorldApi:
#      Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#
#    HelloWorldFunction:
#      Description: "Hello World Lambda Function ARN"
#      Value: !GetAtt HelloWorldFunction.Arn
#
#    HelloWorldFunctionIamRole:
#      Description: "Implicit IAM Role created for Hello World function"
#      Value: !GetAtt HelloWorldFunctionRole.Arn


#    ImageHandlerdApi:
#        Description: "API Gateway endpoint URL for Prod stage for Image Handler function"
#        Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/img/"

    ImageHandlerFunction:
        Description: "Image Handler Lambda Function ARN"
        Value: !GetAtt ImageHandlerFunction.Arn

    ImageHandlerFunctionIamRole:
        Description: "Implicit IAM Role created for Image Handler function"
        Value: !GetAtt ImageHandlerFunction.Arn

    ApiUrl:
        Description: URL of the API endpoint
        Value: !Join
            - ''
            - - https://
              - !Ref ImageHandlerGatewayApi
              - '.execute-api.'
              - !Ref 'AWS::Region'
              - '.amazonaws.com/Dev'
